. Ordem_Compra (codOrdem, dtEmissão, codFornecedor, nomeFornecedor,
endereçoFornecedor,codMaterial (n vezes), descriçãoMaterial (n vezes),
qtComprada (n vezes), valorUnitário (nvezes), valorTotalItem (n vezes),
valorTotalOrdem).

1 FN -> atributos multivalorados ou atributos compostos (devem ser atomicos)

 atributos multivalorados -> ,codMaterial (n vezes), descriçãoMaterial (n vezes),
qtComprada (n vezes), valorUnitário (nvezes), valorTotalItem (n vezes),

 Ordem_Compra (codOrdem, codCompra , dtEmissão, codFornecedor, nomeFornecedor, endereçoFornecedor, valorTotalOrdem).

	materiais (codMaterial, descriçãoMaterial, valorUnitário)

	compras (codCompra, codMaterial, quantidade, valorTotal)

2 FN -> estar 1FN e NAO ter dependencia funcional parcial (
ter um atributo nao-chave dependendo funcionalmente de parte da chave primaria APENAS)
-> se nenhum atributo não-chave existe na relação(todos os atributos sao parte de chave primaria)
-> se todo atributo não-chave é dependente funcionalmente de todo o conjunto de atributos da chave primária


Ordem_Compra (codOrdem, codCompra , dtEmissão, codFornecedor, valorTotalOrdem).

	Fornecedor(codFornecedor, nomeFornecedor, endereçoFornecedor)
	

	materiais (codMaterial, descriçãoMaterial, valorUnitário)

	compras (codCompra, codMaterial, quantidade, valorTotal)


3 FN -> estar na 2 FN e não há atributo não chave determinado funcionalmente por outro atributo não chave
	->dependencia transitiva
->solução para relações fora da 3 FN.
- pra cada atributo nao-chave que determina funcionalmente outro atributo crie uma nova tabela
- atributo não-chave sera a pk desta nova tabela
- mova os atributos dependentes funcionalmente para a nova tabela.

Ordem_Compra (codOrdem, codCompra , dtEmissão, codFornecedor, valorTotalOrdem).

	Fornecedor(codFornecedor, nomeFornecedor, endereçoFornecedor)
	

	materiais (codMaterial, descriçãoMaterial, valorUnitário)

	compras (codCompra, codMaterial, quantidade, valorTotal)









